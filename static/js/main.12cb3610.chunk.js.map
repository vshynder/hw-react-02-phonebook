{"version":3,"sources":["components/Filter.js","components/ContactForm.js","components/ContactList.js","App.js","index.js"],"names":["Filter","props","id","onChange","filterChange","value","filterVal","ContactForm","state","name","number","handleChange","e","setState","target","handleSubmit","preventDefault","formSubmit","onSubmit","this","type","React","Component","ContactList","filter","contacts","remove","map","contact","key","onClick","toLocaleLowerCase","includes","App","removeContact","newContacts","addToLocalStorage","trim","find","alert","shortid","generate","item","localStorage","setItem","JSON","stringify","parse","getItem","ReactDOM","render","document","getElementById"],"mappings":"0RAeeA,EAbA,SAACC,GACd,OACE,6BACE,oDACA,2BACEC,GAAG,SACHC,SAAUF,EAAMG,aAChBC,MAAOJ,EAAMK,cCyCNC,E,4MA/CbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAACC,GACd,EAAKC,SAAL,eACGD,EAAEE,OAAOZ,GAAKU,EAAEE,OAAOT,S,EAI5BU,aAAe,SAACH,GACdA,EAAEI,iBACF,EAAKf,MAAMgB,WAAW,EAAKT,OAC3B,EAAKK,SAAS,CACZJ,KAAM,GACNC,OAAQ,M,uDAKV,OACE,0BAAMQ,SAAUC,KAAKJ,cACnB,sCAEE,2BACEb,GAAG,OACHC,SAAUgB,KAAKR,aACfS,KAAK,OACLf,MAAOc,KAAKX,MAAMC,QAGtB,wCAEE,2BACEP,GAAG,SACHC,SAAUgB,KAAKR,aACfS,KAAK,OACLf,MAAOc,KAAKX,MAAME,UAGtB,oD,GA1CkBW,IAAMC,WCsCjBC,EAtCK,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OACvC,OACE,4BACc,KAAXF,EACGC,EAASE,KAAI,SAACC,GAAD,OACX,wBAAIC,IAAKD,EAAQ1B,IACd0B,EAAQnB,KADX,KACmBmB,EAAQlB,OACzB,4BACEoB,QAAS,WACPJ,EAAOE,EAAQ1B,MAFnB,cASJuB,EACGD,QAAO,SAACI,GAAD,OACNA,EAAQnB,KACLsB,oBACAC,SAASR,EAAOO,wBAEpBJ,KAAI,SAACC,GAAD,OACH,wBAAIC,IAAKD,EAAQ1B,IACd0B,EAAQnB,KADX,KACmBmB,EAAQlB,OACzB,4BACEoB,QAAS,WACPJ,EAAOE,EAAQ1B,MAFnB,gBC8DD+B,G,kNA/EbzB,MAAQ,CACNiB,SAAU,GACVD,OAAQ,I,EAGVU,cAAgB,SAAChC,GACf,IAAMiC,EAAc,EAAK3B,MAAMiB,SAASD,QACtC,SAACI,GAAD,OAAaA,EAAQ1B,KAAOA,KAE9B,EAAKW,SAAS,CACZY,SAAUU,IAEZ,EAAKC,kBAAkBD,I,EAGzBxB,aAAe,SAACC,GACd,EAAKC,SAAL,eACGD,EAAEE,OAAOZ,GAAKU,EAAEE,OAAOT,S,EAI5BU,aAAe,YAAuB,IAApBN,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACF,KAAhBD,EAAK4B,QAAmC,KAAlB3B,EAAO2B,OAInB,EAAK7B,MAAMiB,SAASa,MAAK,SAACV,GAAD,OAAaA,EAAQnB,OAASA,KAEjE8B,MAAM,GAAD,OAAI9B,EAAJ,4BACL,EAAKI,SACH,CACEY,SAAS,GAAD,mBACH,EAAKjB,MAAMiB,UADR,CAEN,CACEhB,OACAC,SACAR,GAAIsC,IAAQC,gBAIlB,WACE,EAAKL,kBAAkB,EAAK5B,MAAMiB,aAlBxCc,MAAM,qC,gEAuBQG,GAChBC,aAAaC,QAlDF,aAkDkBC,KAAKC,UAAUJ,M,0CAI5C,IAAMjB,EAAWoB,KAAKE,MAAMJ,aAAaK,QAtD9B,eAuDPvB,GACFN,KAAKN,SAAS,CACZY,SAAS,YAAKA,O,+BAMlB,OACE,6BACE,yCACA,kBAAC,EAAD,CAAaR,WAAYE,KAAKJ,eAC9B,wCACA,kBAAC,EAAD,CACEX,aAAce,KAAKR,aACnBL,UAAWa,KAAKX,MAAMgB,SAExB,kBAAC,EAAD,CACEA,OAAQL,KAAKX,MAAMgB,OACnBC,SAAUN,KAAKX,MAAMiB,SACrBC,OAAQP,KAAKe,qB,GAzELb,IAAMC,YCLxB2B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.12cb3610.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = (props) => {\n  return (\n    <div>\n      <p>Find contacts by name</p>\n      <input\n        id=\"filter\"\n        onChange={props.filterChange}\n        value={props.filterVal}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nclass ContactForm extends React.Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.formSubmit(this.state);\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            id=\"name\"\n            onChange={this.handleChange}\n            type=\"text\"\n            value={this.state.name}\n          />\n        </label>\n        <label>\n          Number\n          <input\n            id=\"number\"\n            onChange={this.handleChange}\n            type=\"text\"\n            value={this.state.number}\n          />\n        </label>\n        <button>Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from \"react\";\n\nconst ContactList = ({ filter, contacts, remove }) => {\n  return (\n    <ul>\n      {filter === \"\"\n        ? contacts.map((contact) => (\n            <li key={contact.id}>\n              {contact.name}: {contact.number}\n              <button\n                onClick={() => {\n                  remove(contact.id);\n                }}\n              >\n                delete\n              </button>\n            </li>\n          ))\n        : contacts\n            .filter((contact) =>\n              contact.name\n                .toLocaleLowerCase()\n                .includes(filter.toLocaleLowerCase())\n            )\n            .map((contact) => (\n              <li key={contact.id}>\n                {contact.name}: {contact.number}\n                <button\n                  onClick={() => {\n                    remove(contact.id);\n                  }}\n                >\n                  delete\n                </button>\n              </li>\n            ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import React from \"react\";\nimport shortid from \"shortid\";\nimport Filter from \"./components/Filter\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport \"./app.css\";\n\nconst LS_KEY = \"react-hw-3\";\n\nclass App extends React.Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  removeContact = (id) => {\n    const newContacts = this.state.contacts.filter(\n      (contact) => contact.id !== id\n    );\n    this.setState({\n      contacts: newContacts,\n    });\n    this.addToLocalStorage(newContacts);\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  };\n\n  handleSubmit = ({ name, number }) => {\n    if (name.trim() === \"\" || number.trim() === \"\") {\n      alert(\"Name and number must be provided\");\n      return;\n    }\n    const check = this.state.contacts.find((contact) => contact.name === name);\n    check\n      ? alert(`${name} is already in contacts`)\n      : this.setState(\n          {\n            contacts: [\n              ...this.state.contacts,\n              {\n                name,\n                number,\n                id: shortid.generate(),\n              },\n            ],\n          },\n          () => {\n            this.addToLocalStorage(this.state.contacts);\n          }\n        );\n  };\n\n  addToLocalStorage(item) {\n    localStorage.setItem(LS_KEY, JSON.stringify(item));\n  }\n\n  componentDidMount() {\n    const contacts = JSON.parse(localStorage.getItem(LS_KEY));\n    if (contacts) {\n      this.setState({\n        contacts: [...contacts],\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Phonebook</h2>\n        <ContactForm formSubmit={this.handleSubmit} />\n        <h2>Contacts</h2>\n        <Filter\n          filterChange={this.handleChange}\n          filterVal={this.state.filter}\n        />\n        <ContactList\n          filter={this.state.filter}\n          contacts={this.state.contacts}\n          remove={this.removeContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}